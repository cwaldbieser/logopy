
to abs.value :x
op ifelse [ :x < 0 ] [ -1 * :x ] [ :x ]
end

to max :a :b
ifelse [ :a >= :b ] [ op :a ] [ op :b ]
end

to min :a :b
ifelse [ :a <= :b ] [ op :a ] [ op :b ]
end

to rotate.coords :cx :cy :x :y :theta
    localmake "c cos :theta
    localmake "s sin :theta
    ; translate point back to origin.
    localmake "x0 :x - :cx
    localmake "y0 :y - :cy
    ; rotate point
    localmake "xnew difference (:x0 * :c) (:y0 * :s)
    localmake "ynew sum (:x0 * :s) (:y0 * :c)
    ; translate back
    localmake :xnew :xnew + :cx
    localmake :ynew :ynew + :cy 
    output (list :xnew :ynew)
end

to ellipse :major :minor [:angle 360] [:clockwise "true] [:steps 15]
    localmake "theta cartesian.heading heading 
    localmake "orig.pos pos
    localmake "i first :orig.pos
    localmake "j last :orig.pos
    localmake "angle.count int quotient :angle :steps
    ifelse [ :clockwise ] [
        localmake "angles rseq 0 (1 - :angle) :angle.count
    ] [
        localmake "angles rseq 0 (:angle - 1) :angle.count
    ]
    localmake "half.major :major / 2
    localmake "half.minor :minor / 2
    localmake "coords map [
        rotate.coords 0 0  (product :half.major cos ?) (product :half.minor sin ?) :theta
    ] :angles
    localmake "coords map [(list sum :i first ? sum :j last ?)] :coords
    pu
    setpos first :coords
    pd
    foreach butfirst :coords [
        setpos ?
    ]
end

to ellipse2 :major :minor [:angle 360] [:clockwise "true] [:steps 15]
    localmake "theta cartesian.heading heading 
    localmake "orig.pos pos
    localmake "i first :orig.pos
    localmake "j last :orig.pos
    localmake "angle.count int quotient :angle :steps
    ifelse [ :clockwise ] [
        localmake "startangle 90
        localmake "angles rseq :startangle ((:startangle - :angle) + 1) :angle.count
    ] [
        localmake "startangle 0 - 90
        localmake "angles rseq :startangle ((:startangle + :angle) - 1) :angle.count
    ]
    localmake "half.major :major / 2
    localmake "half.minor :minor / 2
    localmake "coords map [
        rotate.coords 0 0  (product :half.major cos ?) (product :half.minor sin ?) :theta
    ] :angles
    ifelse [ not :clockwise ] [ localmake "xsign -1 localmake "ysign 1 ] [ localmake "xsign 1 localmake "ysign -1 ]
    localmake "i (sum :i (:half.minor * (sin :theta) * :xsign))
    localmake "j (sum :j (:half.minor * (cos :theta) * :ysign))
    localmake "coords map [(list sum :i first ? sum :j last ?)] :coords
    pu
    setpos first :coords
    pd
    foreach butfirst :coords [
        setpos ?
    ]
end

